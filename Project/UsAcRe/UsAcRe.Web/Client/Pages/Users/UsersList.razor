@page "/users/list"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using UsAcRe.Web.Shared.Models
@attribute [Authorize]
@inject HttpClient Http

<h1>List of users</h1>

<RadzenGrid Count="@count" Data="@users" LoadData="@LoadData" AllowSorting="true" AllowFiltering="true" AllowPaging="true" PageSize="10" TItem="UserModel">
    <Columns>
        <RadzenGridColumn TItem="UserModel" Property="Id" Title="Id" Filterable="false" Visible="true" />
        <RadzenGridColumn TItem="UserModel" Property="UserName" Title="UserName" />
        <RadzenGridColumn TItem="UserModel" Property="Email" Title="Email" />
        <RadzenGridColumn TItem="UserModel" Property="Role" Title="Role" />

    </Columns>
</RadzenGrid>


@code {
    IEnumerable<UserModel> users;
    int count;

    async Task LoadData(LoadDataArgs args) {
        try {
            var response = await Http.PostAsJsonAsync("/users/list", args);
            users = await response.Content.ReadFromJsonAsync<IEnumerable<UserModel>>();
            count = users.Count();
            await InvokeAsync(StateHasChanged);
        } catch(AccessTokenNotAvailableException exception) {
            exception.Redirect();
        }
    }
}
