@page "/roles/list"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using UsAcRe.Web.Shared.Models

@inject HttpClient Http
@inject DialogService DialogService

<h1>List of roles</h1>

<RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="Add" Click="@AddRecord" />
<RadzenGrid Count="@count" Data="@roles"
            AllowSorting="true"
            AllowFiltering="true"
            AllowPaging="true"
            PageSize="4"
            TItem="RoleModel"
            LoadData="@LoadData"
            RowDoubleClick="@OpenEditor">
    <Columns>
        <RadzenGridColumn TItem="RoleModel" Property="Id" Title="Id" Filterable="false" Visible="true" />
        <RadzenGridColumn TItem="RoleModel" Property="Name" Title="Name" />

    </Columns>
</RadzenGrid>


@code {
    IEnumerable<RoleModel> roles;
    int count;

    async Task LoadData(LoadDataArgs args) {
        try {
            var response = await Http.PostAsJsonAsync("/roles/paged", args);
            roles = await response.Content.ReadFromJsonAsync<IEnumerable<RoleModel>>();
            count = roles.Count();
            await InvokeAsync(StateHasChanged);
        } catch(AccessTokenNotAvailableException exception) {
            exception.Redirect();
        }
    }

    async Task OpenEditor(RoleModel role) {
        await DialogService.OpenAsync<EditRole>($"Role {role}",
            new Dictionary<string, object>() { { "RoleId", role.Id } },
                        new DialogOptions() { Width = "700px", Height = "530px" });

    }

    async Task AddRecord() {
        await DialogService.OpenAsync<EditRole>($"Create role");

    }
}
